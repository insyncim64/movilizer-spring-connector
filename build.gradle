apply plugin: 'java'

apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'

group = 'com.movilizer.ps'
version = '0.1.0'

springBoot {
    mainClass = 'com.movilizer.connector.MovilizerConnectorApplication'
}

buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.8.RELEASE")
	}
}

repositories {
	jcenter()
	mavenLocal()
	maven {
		credentials {
			username="build"
			password="Movilitas06"
		}
		url 'https://source.movilizer.com/artifactory/lighthouse/'
	}
}

sourceCompatibility = 1.8
targetCompatibility = 1.8


// New configuration for CXF dependencies.
configurations {
    cxf
    providedRuntime
}

dependencies {

    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
//    compile('javax.xml.bind:jaxb-api:2.2.11') // Java 9 compatibility
    compile("org.springframework.boot:spring-boot-starter-data-rest")
    //compile("org.springframework.boot:spring-boot-starter-ws")
    //compile("org.springframework.boot:spring-boot-starter-remote-shell")
    compile("org.springframework.boot:spring-boot-starter-actuator")

    //postgresql driver
//    compile('org.postgresql:postgresql:9.3-1102-jdbc41')
    compile('com.h2database:h2:1.4.183')

    //for several IO and FileUtils operations this dependency is needed.
    compile('org.apache.commons:commons-io:1.3.2')
    //This is needed for the serialization of MessageQueue Items
    compile('de.ruedigermoeller:fst:2.51')
    //needed to encrypt plain text password to SHA-512
    compile("org.jasypt:jasypt:1.9.0")

    //movilizer web service
    compile("com.movilizer.mds:movilizer-webservice:15.11.1.5")
	{
	  //exclude module: 'jaxb-impl'
	}

    compile("org.apache.httpcomponents:httpclient:4.4")
    compile("org.apache.httpcomponents:httpmime:4.4")
    compile("org.apache.httpcomponents:fluent-hc:4.4")
    compile("org.apache.cxf:cxf-core:3.1.1")
    compile("org.apache.cxf:cxf-rt-frontend-jaxws:3.1.1")
	{
	  exclude module: 'jaxb-impl'
	}
    compile("org.apache.cxf:cxf-rt-transports-http:3.1.1")

	//This is needed to use yaml properties
	compile("org.yaml:snakeyaml:1.8")

	compile ('org.apache.poi:poi:3.16')
	{
	  //exclude module: 'jaxb-impl'
	}
    compile('org.apache.poi:poi-ooxml:3.16')
	{
	  //exclude module: 'jaxb-impl'
	}

    testCompile("org.springframework.boot:spring-boot-starter-test")

    providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")

}

task wrapper(type: Wrapper) {
    gradleVersion = '4.3'
}

//jar {
//    // Keep jar clean:
//    exclude 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA', 'META-INF/*.MF'
//    manifest {
//        attributes 'Main-Class':'com.movilizer.reliance.main.MainApplication'
////        'Class-Path': sourceSets.main.runtimeClasspath
//        }
//       from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
//
//}
//
//
////create a single Jar with all dependencies
//task fatJar(type: Jar) {
//    manifest {
//        attributes 'Implementation-Title': 'RelianceConnector',
//                'Implementation-Version': version,
//                'Main-Class': 'com.movilizer.reliance.main.MainApplication'
//    }
//    baseName = project.name + ' -all'
////    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
//    with jar
//}